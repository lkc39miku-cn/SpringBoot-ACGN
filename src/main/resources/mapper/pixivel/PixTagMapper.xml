<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hikari.project.pixivel.mapper.PixTagMapper">
  <resultMap id="BaseResultMap" type="com.hikari.project.pixivel.entity.PixTag">
    <!--@mbg.generated-->
    <!--@Table spring_cloud.pix_tag-->
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="other_name" jdbcType="VARCHAR" property="otherName" />
    <result column="image" jdbcType="VARCHAR" property="image" />
  </resultMap>
  <sql id="Base_Column_List">
    <!--@mbg.generated-->
    id, `name`, other_name, image
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    <!--@mbg.generated-->
    select 
    <include refid="Base_Column_List" />
    from spring_cloud.pix_tag
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <select id="selectByIdList" parameterType="java.lang.String" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from spring_cloud.pix_tag
    where id in
    <foreach collection="id.split(',')" item="item" open="(" separator="," close=")">
      #{item,jdbcType=VARCHAR}
    </foreach>
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    <!--@mbg.generated-->
    delete from spring_cloud.pix_tag
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.hikari.project.pixivel.entity.PixTag">
    <!--@mbg.generated-->
    insert into spring_cloud.pix_tag (id, `name`, other_name, 
      image)
    values (#{id,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, #{otherName,jdbcType=VARCHAR}, 
      #{image,jdbcType=VARCHAR})
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.hikari.project.pixivel.entity.PixTag">
    <!--@mbg.generated-->
    update spring_cloud.pix_tag
    <set>
      <if test="name != null">
        `name` = #{name,jdbcType=VARCHAR},
      </if>
      <if test="otherName != null">
        other_name = #{otherName,jdbcType=VARCHAR},
      </if>
      <if test="image != null">
        image = #{image,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateBatchSelective" parameterType="java.util.List">
    <!--@mbg.generated-->
    update spring_cloud.pix_tag
    <trim prefix="set" suffixOverrides=",">
      <trim prefix="`name` = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.name != null">
            when id = #{item.id,jdbcType=VARCHAR} then #{item.name,jdbcType=VARCHAR}
          </if>
        </foreach>
      </trim>
      <trim prefix="other_name = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.otherName != null">
            when id = #{item.id,jdbcType=VARCHAR} then #{item.otherName,jdbcType=VARCHAR}
          </if>
        </foreach>
      </trim>
      <trim prefix="image = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.image != null">
            when id = #{item.id,jdbcType=VARCHAR} then #{item.image,jdbcType=VARCHAR}
          </if>
        </foreach>
      </trim>
    </trim>
    where id in
    <foreach close=")" collection="list" item="item" open="(" separator=", ">
      #{item.id,jdbcType=VARCHAR}
    </foreach>
  </update>
  <insert id="batchInsert" parameterType="map">
    <!--@mbg.generated-->
    insert into spring_cloud.pix_tag
    (id, `name`, other_name, image)
    values
    <foreach collection="list" item="item" separator=",">
      (#{item.id,jdbcType=VARCHAR}, #{item.name,jdbcType=VARCHAR}, #{item.otherName,jdbcType=VARCHAR}, 
        #{item.image,jdbcType=VARCHAR})
    </foreach>
  </insert>

  <select id="selectList" resultMap="BaseResultMap">
    select
      <include refid="Base_Column_List" />
    from spring_cloud.pix_tag
    <where>
      <if test="name != null and name != ''">
        and name like concat('%', #{name,jdbcType=VARCHAR}, '%')
      </if>
      <if test="otherName != null and otherName != ''">
        and other_name like concat('%', #{otherName,jdbcType=VARCHAR}, '%')
      </if>
    </where>
    </select>
</mapper>